name: Refresh Data and Push to GitHub

on:
  schedule:
    - cron: '0 14 * * *'  # 10:00 AM República Dominicana (UTC-4)
    - cron: '0 18 * * *'  # 2:00 PM República Dominicana (UTC-4)
    - cron: '0 22 * * *'  # 6:00 PM República Dominicana (UTC-4)
  workflow_dispatch:  # Permite ejecución manual desde GitHub Actions

jobs:
  refresh_data:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Clonar el repositorio
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 📦 Instalar dependencias
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv  # 🔄 Instalación manual para asegurar dotenv

      - name: 🔍 Verificar instalación de dotenv
        run: |
          pip show python-dotenv || echo "❌ dotenv no está instalado"
          python -c "import dotenv; print('✅ dotenv instalado correctamente')"


      - name: 🔑 Cargar Variables de Entorno
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV

      - name: 🔄 Refrescar Data
        run: python update_data.py  # Ejecuta el script en GitHub Actions

      - name: 🔄 Subir cambios a GitHub
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Data.csv
          git commit -m "🔄 Datos actualizados automáticamente" || echo "No hay cambios para subir"
          git push
